---
- name: Include Pre-Tasks
  import_tasks: pre_task.yml

- name: Instalar MySQL Server
  apt:
    name: mysql-server
    state: present

- name: Garantindo que o MySQL está em pé
  service:
    name: mysql
    state: started
    enabled: yes

- name: Permintindo conexão externas
  copy:
    dest: /etc/mysql/mysql.conf.d/mysqld.cnf
    content: |
      [mysqld]
      bind-address = 0.0.0.0
    force: yes  # Garante que o arquivo será sobrescrito
  notify: Reiniciar MySQL

- name: Reiniciar MySQL
  ansible.builtin.service:
    name: mysql
    state: restarted
    enabled: yes

- name: Validando MySQL
  command: mysqladmin -u root -p'password' ping -h localhost
  register: mysql_ping_status
  ignore_errors: yes  # Allow failure for debugging

- name: Create MySQL user 'test'
  community.mysql.mysql_user:
    name: test
    password: "Test123!"
    host: "%"
    priv: "*.*:ALL"
    state: present
    login_user: root
    login_password: "password"
    login_host: localhost
    login_unix_socket: /var/run/mysqld/mysqld.sock  # Use actual socket path

#- name: Configurar senha root do MySQL
#  community.mysql.mysql_user:
#    name: root
#    password: "{{ mysql_root_password }}"
#    login_host: localhost
#    login_port: 3306
#    login_user: root
#    login_password: "{{ mysql_root_password }}"
#    priv: "*.*:ALL,GRANT"
#    login_unix_socket: /var/run/mysqld/mysqld.sock  # Use actual socket path
#  ignore_errors: yes  # Evita falha caso já esteja configurado corretamente

- name: Criar bancos de dados
  mysql_db:
    name: "{{ item.name }}"
    encoding: "{{ item.encoding }}"
    collation: "{{ item.collation }}"
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"
    login_host: localhost
    login_unix_socket: /var/run/mysqld/mysqld.sock  # Use actual socket path
  loop: "{{ mysql_databases }}"
